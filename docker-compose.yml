services:
  server:
    container_name: troublog
    image: marshmallowing/troublog:latest
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
    volumes:
      - ${LOG_DIR:-./logs}:/app/logs  # 로그 파일 공유
    networks:
      - app-network
      - monitoring
    depends_on:
      - redis

  redis:
    image: redis:8.2.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
      - monitoring
    restart: unless-stopped

  nginx:
     container_name: nginx
     image: nginx:latest
     ports:
        - "80:80"
        - "443:443"  # HTTPS 포트
     volumes:
       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
     depends_on:
        - server
        - grafana
     networks:
       - app-network
       - monitoring

  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: troublog-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus-${SPRING_PROFILES_ACTIVE:-dev}.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME:-15d}'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  # Grafana - 시각화 및 대시보드
  grafana:
    image: grafana/grafana:10.0.0
    container_name: troublog-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_ALLOW_SIGNUP}
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL}
      - GF_SERVER_SERVE_FROM_SUB_PATH=${GRAFANA_SERVE_FROM_SUB_PATH}
    restart: unless-stopped
    networks:
      - monitoring

  # Loki - 로그 저장소
  loki:
    image: grafana/loki:2.9.0
    container_name: troublog-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - monitoring

  # Promtail - 로그 수집
  promtail:
    image: grafana/promtail:2.9.0
    container_name: troublog-promtail
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - ${LOG_DIR:-./logs}:/var/log/troublog  # Spring Boot 로그 디렉토리 마운트
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - loki

networks:
  app-network:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  redis_data:
